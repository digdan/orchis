job_id: video_weave_1
description: Weave 2 videos in a bpm synch

inputs:
  video_a:
    prompt: URL to the first video
  video_b:
    prompt: URL to the second video
  bpm:
    prompt: The Beats per Minute to sync to
  total_length: "eval return 240 / {{ inputs.bpm }}"
  beat: "eval return 60 / {{ inputs.bpm }}"
  beat_2: "eval return 120 / {{ inputs.bpm }}"
  beat_3: "eval return 180 / {{ inputs.bpm }}"    

ouputs:
  final_file: "output-vw1.mp4"    

jobs:
  init:
    command: "rm -rf table; mkdir table; curl -o table/a-0.mp4 {{inputs.video_a}};curl -o table/b-0.mp4 {{inputs.video_b}}"
    depends_on: []

  transform_video_a:
    command: "ffmpeg -i table/a-0.mp4 -t {{ conseqs.total_length }} -c copy a-1.mp4"
    depends_on: [init]

  transform_video_b:
    command: "ffmpeg -i table/b-0.mp4 -t {{ conseqs.total_length }} -c copy b-1.mp4"
    depends_on: [init]

  split_video_a_1:
    command: "ffmpeg -i a-1.mp4 -ss 0 -t {{ conseqs.beat }} -c copy a-2-1.mp4"
    depends_one: [transform_vido_a]

  split_video_a_2:
    command: "ffmpeg -i a-1.mp4 -ss {{ conseqs.beat }} -t {{ conseqs.beat }} -c copy a-2-2.mp4"
    depends_one: [transform_vido_a]

  split_video_a_3:
    command: "ffmpeg -i a-1.mp4 -ss {{ conseqs.beat_2 }} -t {{ conseqs.beat }} -c copy a-2-3.mp4"
    depends_one: [transform_vido_a]

  split_video_a_4:
    command: "ffmpeg -i a-1.mp4 -ss 30 -t {{ conseqs.beat_3 }} -c copy a-2-4.mp4"
    depends_one: [transform_vido_a]

  split_video_b_1:
    command: "ffmpeg -i b-1.mp4 -ss 0 -t {{ conseqs.beat }} -c copy b-2-1.mp4"
    depends_one: [transform_vido_b]

  split_video_b_2:
    command: "ffmpeg -i b-1.mp4 -ss {{ conseqs.beat }} -t {{ conseqs.beat }} -c copy b-2-2.mp4"
    depends_one: [transform_vido_b]

  split_video_b_3:
    command: "ffmpeg -i b-1.mp4 -ss {{ conseqs.beat_2 }} -t {{ conseqs.beat }} -c copy b-2-3.mp4"
    depends_one: [transform_vido_b]

  split_video_b_4:
    command: "ffmpeg -i b-1.mp4 -ss 30 -t {{ conseqs.beat_3 }} -c copy b-2-4.mp4"
    depends_one: [transform_vido_b]